{"name":"Disruptor Illustrated","tagline":"","body":"# technology is similar, thought behind is the key\r\n\r\nso we start from the real world examples, we will find the idea behind technology is counterpart of real world cases.\r\n\r\n# queue problem\r\n\r\nconsider the basic queue processing, a lot of people need to buy their meals. as the boss of fast food, what are you going to do to serve more customers? imagine you employ only one waitress, so only one queue process all request. in order to improve throughput, the waitress must be stronger and fast hands. \r\n\r\nwhat is the technology counterpart? more's law:\r\n\r\n![Moore](Moore.png)\r\n\r\n\r\n![Moore svg](Moore.svg)\r\n\r\n## \r\n1.1 排队问题：两个性能指标：吞吐量、延时\r\n1.2 串行：麦当劳收银员，换一个动作快的，吞吐量/延时线性提高。Scale up \r\n1.3 摩尔定律适用\r\n1.4 并行：增加一个收银员，吞吐量线性提高/延时不变 Scale out\r\n1.5 Admal定律适用\r\n1.6 分层体系结构，总店、分店、并行运作，职责划分不同\r\n2. Disruptor：CPU level 并行计算，进程内通信\r\n2.1 Mechanical Sympathy\r\n    找出系统中不能并行的瓶颈，并避免之\r\n2.2 队列，有锁，任何类型的锁都是瓶颈，\r\n2.2.1 Lock & CAS\r\n2.2.2 Disruptor使用Memory Barrier保证多核之间的数据同步\r\n2.3 多级Cache，内存拷贝操作，比较慢，batch\r\n2.4 Disruptor Effect: 1. Throughput 2. Latency\r\n3. Parallel并行提高性能的其他应用\r\n3.1 BigPipe\r\n3.2 Reactive programming 响应式编程","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}